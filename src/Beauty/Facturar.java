/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Beauty;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
/**
 *
 * @author User
 */
public class Facturar extends javax.swing.JFrame {
    String user = "root";
    String clave = "";
    String url = "jdbc:mysql://localhost:3306/beauty";
    Connection con;
    Statement stmt;
    ResultSet rs;
    String datos[] = new String [4]; 
    DefaultTableModel modelo = new DefaultTableModel();
   
    
    /**
     * Creates new form Inicio
     */
    public Facturar() {
        
        initComponents();
        this.setTitle("Facturar - Contabilidad");
        this.setLocationRelativeTo(null);
        try {
                Class.forName("com.mysql.cj.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        jTextFieldFecha.setText(fecha());
      
       buscarProducto(fecha());
       
       jTextFieldCantidad.setText("1");
       
        

        
        
          
       
    }
    public Image getIconImage(){
       Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes1/icono.png"));
       return retValue;
    }
    
   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldFecha = new javax.swing.JTextField();
        jComboBoxCliente = new javax.swing.JTextField();
        jLabelPrecio6 = new javax.swing.JLabel();
        jTextFieldMonto1 = new javax.swing.JTextField();
        jTextFieldMonto = new javax.swing.JTextField();
        jLabelPrecio5 = new javax.swing.JLabel();
        jScrollPaneProducto = new javax.swing.JScrollPane();
        TablaDatos = new javax.swing.JTable();
        jTextFieldCantidad = new javax.swing.JTextField();
        jLabelPrecio3 = new javax.swing.JLabel();
        jButtonListo = new javax.swing.JButton();
        jButtonCancelar1 = new javax.swing.JButton();
        jLabelPrecio4 = new javax.swing.JLabel();
        jLabelPrecio2 = new javax.swing.JLabel();
        jButtonInicio = new javax.swing.JButton();
        jLabelLogo = new javax.swing.JLabel();
        jLabelFondo = new javax.swing.JLabel();
        jLabelSumas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextFieldFecha.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jTextFieldFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFechaActionPerformed(evt);
            }
        });
        jTextFieldFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldFechaKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 230, 240, -1));

        jComboBoxCliente.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jComboBoxCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxClienteActionPerformed(evt);
            }
        });
        jComboBoxCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBoxClienteKeyTyped(evt);
            }
        });
        getContentPane().add(jComboBoxCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 100, 240, -1));

        jLabelPrecio6.setBackground(new java.awt.Color(201, 116, 88));
        jLabelPrecio6.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabelPrecio6.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPrecio6.setText("CÃ“DIGO:");
        jLabelPrecio6.setOpaque(true);
        getContentPane().add(jLabelPrecio6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 40, 120, -1));

        jTextFieldMonto1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jTextFieldMonto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMonto1ActionPerformed(evt);
            }
        });
        jTextFieldMonto1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMonto1KeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldMonto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 40, 240, -1));

        jTextFieldMonto.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jTextFieldMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMontoActionPerformed(evt);
            }
        });
        jTextFieldMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMontoKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 170, 240, -1));

        jLabelPrecio5.setBackground(new java.awt.Color(201, 116, 88));
        jLabelPrecio5.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabelPrecio5.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPrecio5.setText("CANTIDAD:");
        jLabelPrecio5.setOpaque(true);
        getContentPane().add(jLabelPrecio5, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 290, 130, -1));

        TablaDatos = new javax.swing.JTable(){
            public boolean isCellEditable(int riwIndex, int colIndex){
                return false;
            }
        };
        TablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TablaDatos.getTableHeader().setReorderingAllowed(false);
        jScrollPaneProducto.setViewportView(TablaDatos);

        getContentPane().add(jScrollPaneProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 680, 320));

        jTextFieldCantidad.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jTextFieldCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCantidadActionPerformed(evt);
            }
        });
        jTextFieldCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCantidadKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 290, 240, -1));

        jLabelPrecio3.setBackground(new java.awt.Color(201, 116, 88));
        jLabelPrecio3.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabelPrecio3.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPrecio3.setText("PRODUCTO:");
        jLabelPrecio3.setOpaque(true);
        getContentPane().add(jLabelPrecio3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 100, 150, -1));

        jButtonListo.setBackground(new java.awt.Color(201, 116, 88));
        jButtonListo.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jButtonListo.setForeground(new java.awt.Color(255, 255, 255));
        jButtonListo.setText("REGISTRAR VENTA");
        jButtonListo.setContentAreaFilled(false);
        jButtonListo.setOpaque(true);
        jButtonListo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonListo, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 560, -1, 40));

        jButtonCancelar1.setBackground(new java.awt.Color(201, 116, 88));
        jButtonCancelar1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jButtonCancelar1.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes1/x cancelar.png"))); // NOI18N
        jButtonCancelar1.setText("CANCELAR");
        jButtonCancelar1.setBorderPainted(false);
        jButtonCancelar1.setContentAreaFilled(false);
        jButtonCancelar1.setDefaultCapable(false);
        jButtonCancelar1.setOpaque(true);
        jButtonCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelar1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCancelar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 560, 230, 50));

        jLabelPrecio4.setBackground(new java.awt.Color(201, 116, 88));
        jLabelPrecio4.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabelPrecio4.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPrecio4.setText("FECHA:");
        jLabelPrecio4.setOpaque(true);
        getContentPane().add(jLabelPrecio4, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 240, 90, -1));

        jLabelPrecio2.setBackground(new java.awt.Color(201, 116, 88));
        jLabelPrecio2.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabelPrecio2.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPrecio2.setText("VALOR:");
        jLabelPrecio2.setOpaque(true);
        getContentPane().add(jLabelPrecio2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 170, 90, -1));

        jButtonInicio.setBackground(new java.awt.Color(201, 116, 88));
        jButtonInicio.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jButtonInicio.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes1/inicio.png"))); // NOI18N
        jButtonInicio.setBorderPainted(false);
        jButtonInicio.setContentAreaFilled(false);
        jButtonInicio.setOpaque(true);
        jButtonInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInicioActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 70, -1, -1));

        jLabelLogo.setBackground(new java.awt.Color(255, 255, 255));
        jLabelLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes_Pollo/chicken.png"))); // NOI18N
        getContentPane().add(jLabelLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, -70, -1, -1));

        jLabelFondo.setBackground(new java.awt.Color(255, 255, 255));
        jLabelFondo.setOpaque(true);
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 1310, 650));

        jLabelSumas.setText("jLabel1");
        getContentPane().add(jLabelSumas, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 470, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void buscarProducto(String buscar){
        
        
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("NOMBRE");
        
        modelo.addColumn("PRECIO VENTA");
        
        modelo.addColumn("CANTIDAD");
        modelo.addColumn("FECHA");
        modelo.addColumn("TOTAL");
        
        
        
        
        
        
        
        TablaDatos.setModel(modelo);

        
        
        String datos[] = new String [6];
         
        try {
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM vendido WHERE fecha LIKE '%"+buscar+"%'");
            while(rs.next()){
                
                datos[0]= rs.getString(1);
                datos[1]= rs.getString(2);
                datos[2]= rs.getString(3);
                datos[3]= rs.getString(4);
                datos[4]= rs.getString(5);
                datos[5]= rs.getString(6);
                
                
                modelo.addRow(datos);
                
            }
            TablaDatos.setModel(modelo);
            TableColumn columna = TablaDatos.getColumn("ID");
            
            TableColumn columna2 = TablaDatos.getColumn("CANTIDAD");
            
            
            TableColumn columna7 = TablaDatos.getColumn("PRECIO VENTA");
            
            
            columna.setMinWidth(48);
            columna.setMaxWidth(48);
            
            columna2.setMinWidth(70);
            columna2.setMaxWidth(70);
            
            
            columna7.setMinWidth(95);
            columna7.setMaxWidth(95);
            
        } catch (SQLException ex) {
            Logger.getLogger(Vendido.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    void seleccionarCliente(String sele){

        try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM productos WHERE nombre LIKE '%"+sele+"%' ORDER BY nombre ASC");

                while(rs.next()){
                    jTextFieldMonto.setText(rs.getString(3));                   
                }
                         
        } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    void seleccionarCodigo(String sele){

        try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM productos WHERE codigo LIKE '%"+sele+"%' ORDER BY nombre ASC");

                while(rs.next()){
                    jTextFieldMonto.setText(rs.getString(3));
                    jComboBoxCliente.setText(rs.getString(2));
                }
                         
        } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jButtonListo.doClick();
        
    }
    
    
    
     public static String fecha(){
       Date fecha = new Date();
       SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");
       return formatofecha.format(fecha);
    }
     
    
    
    
    private void jTextFieldMontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMontoKeyTyped
        char n = evt.getKeyChar();
        if(n < '0' || n> '9') evt.consume();
    }//GEN-LAST:event_jTextFieldMontoKeyTyped

    private void jTextFieldMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMontoActionPerformed

    private void jButtonListoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListoActionPerformed
        boolean sw2=false;
        
            
        if(jTextFieldMonto.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "No ingresÃ³ el precio de venta");
            sw2=true;
        }else if(jTextFieldFecha.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "No ingresÃ³ la fecha");
            sw2=true;
        }else if(jTextFieldCantidad.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "No ingresÃ³ la cantidad");
            sw2=true;
        }else if(sw2==false){
           
           int precioCompra=0 , ganancia=0 , total=0 , cantidad=0, pos=0;
           
           int fila = TablaDatos.getRowCount();
           boolean sw =true;
            if(fila>0){
                for(int i=0; i<fila;i++){
                    if(TablaDatos.getValueAt(i, 1).equals(jComboBoxCliente.getText())){
                        sw = false;
                        pos=i;
                    }
                }
           }
            total = Integer.parseInt(jTextFieldMonto.getText()) * Integer.parseInt(jTextFieldCantidad.getText());
            String fecha="10/12/2021";
            
            if(sw==true){
            try {
                con = DriverManager.getConnection(url, user, clave);
                stmt = con.createStatement();
                
                stmt.executeUpdate("INSERT INTO vendido VALUES('0','"+jComboBoxCliente.getText()+"' "
                        + ",'"+jTextFieldMonto.getText()+"', '"+jTextFieldCantidad.getText()+"'"
                                + " , '"+jTextFieldFecha.getText()+"' , '"+total+"')");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "error");
                Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            double cantidadMuslo =0 , cantidadAla=0, cantidadContramuslo=0, cantidadPechuga=0 ;
            
            
            try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM pollos WHERE id = '2'");

                while(rs.next()){
                    cantidadMuslo=Double.parseDouble(rs.getString(7));     
                    cantidadAla=Double.parseDouble(rs.getString(8));     
                    cantidadContramuslo=Double.parseDouble(rs.getString(9)); 
                    cantidadPechuga=Double.parseDouble(rs.getString(10));     
                }
                         
            } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM productos WHERE nombre = '"+jComboBoxCliente.getText()+"'");

                while(rs.next()){
                    cantidadMuslo= cantidadMuslo - Double.parseDouble(rs.getString(4));     
                    cantidadAla=cantidadAla - Double.parseDouble(rs.getString(7));     
                    cantidadContramuslo=cantidadContramuslo - Double.parseDouble(rs.getString(5)); 
                    cantidadPechuga=cantidadPechuga - Double.parseDouble(rs.getString(6));     
                }
                         
            } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            String vector[] = {"muslo", "ala", "contramuslo", "pechuga"};
            double cantidades[]={cantidadMuslo, cantidadAla, cantidadContramuslo, cantidadPechuga};
            try { 
                con = DriverManager.getConnection(url, user, clave);
                stmt = con.createStatement();
                for(int i=0; i<4;i++){
                    stmt.executeUpdate("UPDATE pollos SET "+vector[i]+" = '"+cantidades[i]+"' WHERE id = '2'");
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(Registrar.class.getName()).log(Level.SEVERE, null, ex);
            
            }
            double restar=Double.parseDouble(jTextFieldCantidad.getText());
            boolean resta=true;
            try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM productos WHERE nombre = '"+jComboBoxCliente.getText()+"'");

                while(rs.next()){
                    if(rs.getString(8).equals("")){
                    resta = false; 
                    }else{
                    restar=Double.parseDouble(rs.getString(8))- restar;
                    }
                   
                }
                         
            } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            } 
            if(resta==true){
             try { 
                con = DriverManager.getConnection(url, user, clave);
                stmt = con.createStatement();
                
                stmt.executeUpdate("UPDATE productos SET cantidad = "+restar+" WHERE nombre = '"+jComboBoxCliente.getText()+"'");
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Registrar.class.getName()).log(Level.SEVERE, null, ex);
            
            }
           }
            
            resta=true;
            
            
            try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM productos WHERE nombre = '"+jComboBoxCliente.getText()+"'");

                while(rs.next()){
                    if(rs.getString(9).equals("")){
                    resta = false; 
                    }else{
                    restar=Double.parseDouble(rs.getString(9));
                    }
                   
                }
                         
            } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
            
            if(resta==true){
                try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM pollos WHERE id = '1'");

                while(rs.next()){
                    
                    restar=Double.parseDouble(rs.getString(4)) - restar;
                    
                   
                }
                         
            } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            } 
                
                
             try { 
                con = DriverManager.getConnection(url, user, clave);
                stmt = con.createStatement();
                
                stmt.executeUpdate("UPDATE pollos SET cantidad = "+restar+" WHERE id = '1'");
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Registrar.class.getName()).log(Level.SEVERE, null, ex);
            
            }
           }
            
            }else{
                cantidad = Integer.parseInt(jTextFieldCantidad.getText()) + Integer.parseInt((String) TablaDatos.getValueAt(pos, 3));
                total = cantidad * Integer.parseInt(jTextFieldMonto.getText());
              try {
                con = DriverManager.getConnection(url, user, clave);
                stmt = con.createStatement();
                
                stmt.executeUpdate("UPDATE vendido SET cantidad = '"+cantidad+"' WHERE id = '"
                        +(String) TablaDatos.getValueAt(pos,0)+"'");
                stmt.executeUpdate("UPDATE vendido SET total = '"+total+"' WHERE id = '"
                        +(String) TablaDatos.getValueAt(pos, 0)+"'");
                
            } catch (SQLException ex) {
                Logger.getLogger(Registrar.class.getName()).log(Level.SEVERE, null, ex);
            
            }
              
            double cantidadMuslo =0 , cantidadAla=0, cantidadContramuslo=0, cantidadPechuga=0 ;
            
            
            try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM pollos WHERE id = '2'");

                while(rs.next()){
                    cantidadMuslo=Double.parseDouble(rs.getString(7));     
                    cantidadAla=Double.parseDouble(rs.getString(8));     
                    cantidadContramuslo=Double.parseDouble(rs.getString(9)); 
                    cantidadPechuga=Double.parseDouble(rs.getString(10));     
                }
                         
            } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM productos WHERE nombre = '"+jComboBoxCliente.getText()+"'");

                while(rs.next()){
                    cantidadMuslo= cantidadMuslo - (Double.parseDouble(rs.getString(4))*Double.parseDouble(jTextFieldCantidad.getText()));     
                    cantidadAla=cantidadAla - (Double.parseDouble(rs.getString(7))*Double.parseDouble(jTextFieldCantidad.getText()));     
                    cantidadContramuslo=cantidadContramuslo - (Double.parseDouble(rs.getString(5))*Double.parseDouble(jTextFieldCantidad.getText())); 
                    cantidadPechuga=cantidadPechuga - (Double.parseDouble(rs.getString(6))*Double.parseDouble(jTextFieldCantidad.getText()));     
                }
                         
            } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            String vector[] = {"muslo", "ala", "contramuslo", "pechuga"};
            double cantidades[]={cantidadMuslo, cantidadAla, cantidadContramuslo, cantidadPechuga};
            try { 
                con = DriverManager.getConnection(url, user, clave);
                stmt = con.createStatement();
                for(int i=0; i<4;i++){
                    stmt.executeUpdate("UPDATE pollos SET "+vector[i]+" = '"+cantidades[i]+"' WHERE id = '2'");
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(Registrar.class.getName()).log(Level.SEVERE, null, ex);
            
            }
            double restar=Double.parseDouble(jTextFieldCantidad.getText());
            boolean resta=true;
            try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM productos WHERE nombre = '"+jComboBoxCliente.getText()+"'");

                while(rs.next()){
                    if(rs.getString(8).equals("")){
                    resta = false; 
                    }else{
                    restar=Double.parseDouble(rs.getString(8))- restar;
                    }
                   
                }
                         
            } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            } 
            if(resta==true){
             try { 
                con = DriverManager.getConnection(url, user, clave);
                stmt = con.createStatement();
                
                stmt.executeUpdate("UPDATE productos SET cantidad = "+restar+" WHERE nombre = '"+jComboBoxCliente.getText()+"'");
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Registrar.class.getName()).log(Level.SEVERE, null, ex);
            
            }
           }
            
            resta=true;
            
            
            try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM productos WHERE nombre = '"+jComboBoxCliente.getText()+"'");

                while(rs.next()){
                    if(rs.getString(9).equals("")){
                    resta = false; 
                    }else{
                    restar=Double.parseDouble(rs.getString(9));
                    }
                   
                }
                         
            } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
            
            if(resta==true){
                try {
             
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM pollos WHERE id = '1'");

                while(rs.next()){
                    
                    restar=Double.parseDouble(rs.getString(4)) - restar;
                    
                   
                }
                         
            } catch (SQLException ex) {
            Logger.getLogger(Facturar.class.getName()).log(Level.SEVERE, null, ex);
            } 
                
                
             try { 
                con = DriverManager.getConnection(url, user, clave);
                stmt = con.createStatement();
                
                stmt.executeUpdate("UPDATE pollos SET cantidad = "+restar+" WHERE id = '1'");
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Registrar.class.getName()).log(Level.SEVERE, null, ex);
            
            }
           }
            
            
              
            
            }

            
            
            
           modelo.setRowCount(0);
           buscarProducto(fecha());
           jTextFieldCantidad.setText("1");

        }
    }//GEN-LAST:event_jButtonListoActionPerformed

    private void jButtonCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelar1ActionPerformed
        
        jTextFieldMonto.setText("");
    }//GEN-LAST:event_jButtonCancelar1ActionPerformed

    private void jButtonInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInicioActionPerformed
        Inicio2 I = new Inicio2();
        I.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonInicioActionPerformed

    private void jTextFieldFechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFechaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFechaKeyTyped

    private void jTextFieldFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFechaActionPerformed

    private void jTextFieldCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCantidadActionPerformed

    private void jTextFieldCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCantidadKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCantidadKeyTyped

    private void jTextFieldMonto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMonto1ActionPerformed
        seleccionarCodigo(jTextFieldMonto1.getText());
        jTextFieldMonto1.setText("");
    }//GEN-LAST:event_jTextFieldMonto1ActionPerformed

    private void jTextFieldMonto1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMonto1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMonto1KeyTyped

    private void jComboBoxClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxClienteActionPerformed

    private void jComboBoxClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxClienteKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxClienteKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Facturar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable TablaDatos;
    public javax.swing.JButton jButtonCancelar1;
    private javax.swing.JButton jButtonInicio;
    private javax.swing.JButton jButtonListo;
    public javax.swing.JTextField jComboBoxCliente;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelLogo;
    private javax.swing.JLabel jLabelPrecio2;
    private javax.swing.JLabel jLabelPrecio3;
    private javax.swing.JLabel jLabelPrecio4;
    private javax.swing.JLabel jLabelPrecio5;
    private javax.swing.JLabel jLabelPrecio6;
    private javax.swing.JLabel jLabelSumas;
    private javax.swing.JScrollPane jScrollPaneProducto;
    public javax.swing.JTextField jTextFieldCantidad;
    private javax.swing.JTextField jTextFieldFecha;
    public javax.swing.JTextField jTextFieldMonto;
    public javax.swing.JTextField jTextFieldMonto1;
    // End of variables declaration//GEN-END:variables
}
